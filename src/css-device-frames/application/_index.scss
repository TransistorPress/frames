@use "defaults.css";

.app-frame {
    // Themes
    // ===========================================================================
    &.dark {
        // True Gray Palette
        // https://tailwindcss.com/docs/customizing-colors#color-palette-reference
        // 50   #fafafa
        // 100  #f5f5f5
        // 200  #e5e5e5
        // 300  #d4d4d4
        // 400  #a3a3a3
        // 500  #595959
        // 600  #525252
        // 700  #404040
        // 800  #262626
        // 900  #171717
        --cdf-bg      : #262626; // 800
        --cdf-bar-bg  : #404040 linear-gradient(to bottom, #525252, #404040); // 700 to 600
        --cdf-border-color    : #525252; // 600
        --cdf-color           : #f5f5f5; // 100
        --cdf-title-color     : #d4d4d4; // 300
        --cdf-url-bg  : #595959; // 500
        --cdf-url-border-width: 0;
        --cdf-url-color       : #d4d4d4; // 300
    }

    &.wireframe {
        --cdf-bg      : none;
        --cdf-bar-bg  : none;
        --cdf-border-width    : 2px;
        --cdf-url-border-width: 2px;
        --cdf-url-bg  : none;
    }


    // Core
    // ===========================================================================
    --cdf-bar-inset   : 20px;
    --cdf-button-inset: 20px;
    --cdf-title-inset : 20px;
    --cdf-url-inset   : 10px;

    &.mac {
        --cdf-button-gap : calc(var(--cdf-button-size) * 0.57);
        --cdf-button-size: 12px;
        --cdf-title-inset: calc((var(--cdf-button-inset) * 2) + (var(--cdf-button-size) * 3) + (var(--cdf-button-gap) * 2));
        --cdf-url-inset  : var(--cdf-title-inset);
    }

    &.win {
        --cdf-button-gap         : var(--cdf-button-inset);
        --cdf-button-inset       : 25px;
        --cdf-button-size        : 10px;
        --cdf-button-stroke-width: 1px;
        --cdf-title-inset        : calc((var(--cdf-button-inset) * 2) + (var(--cdf-button-size) * 3) + (var(--cdf-button-gap) * 2));
        --cdf-url-inset          : var(--cdf-title-inset);
    }

    // Global Overrides
    // These "default" values allow top-level declarations to override
    // declarations with higher specificity due to nesting.
    // Ex: Top-level --cdf-button-color should override theme value
    &.win {
        --cdf-button-color-default: #ccc;
    }

    &.dark {
        &.win {
            --cdf-button-color-default: #a3a3a3;
        }
    }

    &.wireframe {
        --cdf-button-color-default: #d4d4d4;

        &.dark {
            --cdf-button-color-default: var(--cdf-border-color);
        }
    }


    // Content
    // ---------------------------------------------------------------------------
    &,
    &::before,
    &::after {
        box-sizing: border-box;
    }

    display: block;
    position: relative;
    overflow: auto;
    margin: 1em 0;
    box-shadow: var(--cdf-box-shadow);

    padding: var(--cdf-padding-v, 0) var(--cdf-padding-h, 0) !important;
    border: var(--cdf-border-width) solid var(--cdf-border-color);
    border-radius: var(--cdf-border-radius);
    background: var(--cdf-bg);
    color: var(--cdf-color);

    // Ready for Flexbox
    // NOTE: Not advised to use display:flex on frame. This rule prevents breaking
    // the layout and allows simple layouts only.
    flex-wrap: wrap;

    // Ready for CSS Grid
    // - Define columns using --cdf-grid-rows or grid-template-columns
    // - Define rows using only --cdf-grid-rows (not grid-template-rows)
    // - Align vertically using align-items
    // - Align horizontally using justify-items
    grid-template-rows: var(--cdf-bar-height) var(--cdf-grid-rows);
    grid-template-columns: var(--cdf-grid-columns);

    // Bar
    // ---------------------------------------------------------------------------
    &::before {
        content: '';
        display: block;
        height: var(--cdf-bar-height);
        margin-top: calc(0px - var(--cdf-padding-v, 0px));
        margin-left: calc(0px - var(--cdf-padding-h, 0px));
        margin-right: calc(0px - var(--cdf-padding-h, 0px));
        margin-bottom: var(--cdf-padding-v);
        border-bottom-width: var(--cdf-border-width);
        border-bottom-style: inherit;
        border-bottom-color: var(--cdf-border-color);
        border-top-left-radius: calc(var(--cdf-border-radius) - var(--cdf-border-width));
        border-top-right-radius: calc(var(--cdf-border-radius) - var(--cdf-border-width));
        background: var(--cdf-bar-bg);

        // Ready for CSS Grid
        grid-column: 1 / -1;
        width: calc(100% + (var(--cdf-padding-h, 0px) * 2));
    }

    // Mac
    &.mac {
        &::before {
            background:
            // Button 1
            radial-gradient(
                circle at
                calc(var(--cdf-button-inset) + (var(--cdf-button-size) * 0.5)) calc(var(--cdf-bar-height) / 2),
                var(--cdf-button-color, var(--cdf-button-color-default, #ff5f57)) calc(var(--cdf-button-size) / 2),
                transparent calc(var(--cdf-button-size) / 2)
            ),
            // Button 2
            radial-gradient(
                circle at
                calc(var(--cdf-button-inset) + (var(--cdf-button-size) * 1.5) + var(--cdf-button-gap)) calc(var(--cdf-bar-height) / 2),
                var(--cdf-button-color, var(--cdf-button-color-default, #febc2e)) calc(var(--cdf-button-size) / 2),
                transparent calc(var(--cdf-button-size) / 2)
            ),
            // Button 3
            radial-gradient(
                circle at
                calc(var(--cdf-button-inset) + (var(--cdf-button-size) * 2.5) + (var(--cdf-button-gap) * 2)) calc(var(--cdf-bar-height) / 2),
                var(--cdf-button-color, var(--cdf-button-color-default, #28c840)) calc(var(--cdf-button-size) / 2),
                transparent calc(var(--cdf-button-size) / 2)
            ),
            var(--cdf-bar-bg);
        }
    }

    // Windows
    &.win {
        &::before {
            background:
            // Minimize
            // url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='10' height='10' fill='black' fill-opacity='0.2'%3E%3Crect x='0' y='50%25' width='10.2' height='1' /%3E%3C/svg%3E") calc(100% - (var(--cdf-button-inset) + (var(--cdf-button-size) * 2) + (var(--cdf-button-gap) * 2))) no-repeat,
            no-repeat calc(100% - (var(--cdf-button-inset) + (var(--cdf-button-size) * 2) + (var(--cdf-button-gap) * 2))) / var(--cdf-button-size) var(--cdf-button-size)
            linear-gradient(
                0deg,
                transparent
                calc((var(--cdf-button-size) / 2) - (var(--cdf-button-stroke-width) / 2)),
                var(--cdf-button-color, var(--cdf-button-color-default))
                calc((var(--cdf-button-size) / 2) - (var(--cdf-button-stroke-width) / 2))
                calc((var(--cdf-button-size) / 2) + (var(--cdf-button-stroke-width) / 2)),
                transparent
                calc((var(--cdf-button-size) / 2) + (var(--cdf-button-stroke-width) / 2))
            ),
            // Maximize
            // url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='10' height='10' fill='black' fill-opacity='0.2'%3E%3Cpath d='M0,0v10h10V0H0z M9,9H1V1h8V9z' /%3E%3C/svg%3E") calc(100% - (var(--cdf-button-inset) + var(--cdf-button-size) + var(--cdf-button-gap))) no-repeat,
            no-repeat calc(100% - (var(--cdf-button-inset) + var(--cdf-button-size) + var(--cdf-button-gap))) / var(--cdf-button-size) var(--cdf-button-size)
            linear-gradient(
                0deg,
                var(--cdf-button-color, var(--cdf-button-color-default))
                var(--cdf-button-stroke-width),
                transparent
                var(--cdf-button-stroke-width)
                calc(var(--cdf-button-size) - var(--cdf-button-stroke-width)),
                var(--cdf-button-color, var(--cdf-button-color-default))
                calc(var(--cdf-button-size) - var(--cdf-button-stroke-width))
            ),
            no-repeat calc(100% - (var(--cdf-button-inset) + var(--cdf-button-size) + var(--cdf-button-gap))) / var(--cdf-button-size) var(--cdf-button-size)
            linear-gradient(
                90deg,
                var(--cdf-button-color, var(--cdf-button-color-default))
                var(--cdf-button-stroke-width),
                transparent
                var(--cdf-button-stroke-width)
                calc(var(--cdf-button-size) - var(--cdf-button-stroke-width)),
                var(--cdf-button-color, var(--cdf-button-color-default))
                calc(var(--cdf-button-size) - var(--cdf-button-stroke-width))
            ),
            // Close
            // url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='10' height='10' fill='black' fill-opacity='0.2'%3E%3Cpolygon points='10.2,0.7 9.5,0 5.1,4.4 0.7,0 0,0.7 4.4,5.1 0,9.5 0.7,10.2 5.1,5.8 9.5,10.2 10.2,9.5 5.8,5.1' /%3E%3C/svg%3E%0A") calc(100% - var(--cdf-button-inset)) no-repeat,
            no-repeat calc(100% - var(--cdf-button-inset)) / var(--cdf-button-size) var(--cdf-button-size)
            linear-gradient(
                45deg,
                transparent
                calc((var(--cdf-button-size) * 0.7225) - var(--cdf-button-stroke-width)),
                var(--cdf-button-color, var(--cdf-button-color-default))
                calc((var(--cdf-button-size) * 0.7225) - var(--cdf-button-stroke-width))
                calc((var(--cdf-button-size) * 0.7225) + (var(--cdf-button-stroke-width) * 0.7225)),
                transparent
                calc((var(--cdf-button-size) * 0.7225) + (var(--cdf-button-stroke-width) * 0.7225))
            ),
            no-repeat calc(100% - var(--cdf-button-inset)) / var(--cdf-button-size) var(--cdf-button-size)
            linear-gradient(
                135deg,
                transparent
                calc((var(--cdf-button-size) * 0.7225) - var(--cdf-button-stroke-width)),
                var(--cdf-button-color, var(--cdf-button-color-default))
                calc((var(--cdf-button-size) * 0.7225) - var(--cdf-button-stroke-width))
                calc((var(--cdf-button-size) * 0.7225) + (var(--cdf-button-stroke-width) * 0.7225)),
                transparent
                calc((var(--cdf-button-size) * 0.7225) + (var(--cdf-button-stroke-width) * 0.7225))
            ),
            // Custom
            var(--cdf-bar-bg);
        }
    }

    // Title & URL
    // ---------------------------------------------------------------------------
    &::after {
        content: '';
        position: absolute;
        top: calc(var(--cdf-bar-height) / 2);
        overflow: hidden;
        font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, segoe ui, helvetica neue, helvetica, Ubuntu, roboto, noto, arial, sans-serif;
        font-stretch: normal;
        font-style: normal;
        font-weight: normal;
        line-height: 1;
        letter-spacing: normal;
        text-align: left;
        text-overflow: ellipsis;
        white-space: nowrap;
        transform: translate(0, -50%);
    }

    // Mac
    &.mac {
        &[data-title],
        &[data-url] {
            &::after {
                right: var(--cdf-bar-inset);
            }
        }
    }

    // Windows
    &.win {
        &[data-title],
        &[data-url] {
            &::after {
                left: var(--cdf-bar-inset);
            }
        }
    }

    // Centered
    &.centered {
        &[data-title],
        &[data-url] {
            &::after {
                left: 50%;
                right: 0;
                min-width: 40%;
                max-width: 50%;
                text-align: center;
                transform: translate(-50%, -50%);
            }
        }
    }

    // Title attribute
    &[data-title]::after {
        content: attr(data-title);
        left: var(--cdf-title-inset);
        right: var(--cdf-title-inset);
        color: var(--cdf-title-color);
        font-size: var(--cdf-title-size);
        font-weight: var(--cdf-title-weight);
    }
    &[data-title=""]::after {
        content: var(--cdf-title);
    }

    // URL attribute
    &[data-url]::after {
        content: attr(data-url);
        left: var(--cdf-url-inset);
        right: var(--cdf-url-inset);
        padding: 0 1.25em;
        box-shadow: inset 0 0 0 var(--cdf-url-border-width) var(--cdf-border-color);
        border-radius: var(--cdf-url-border-radius);
        background: var(--cdf-url-bg);
        color: var(--cdf-url-color);
        font-size: 0.8125em;
        line-height: 2em;
        line-height: clamp(
        1.8em,
        calc(var(--cdf-bar-height) * 0.575),
        2em
        );
    }
    &[data-url=""]::after {
        content: var(--cdf-url);
    }

    // Borderless
    // ---------------------------------------------------------------------------
    &.borderless {
        --cdf-padding-h: 0px;
        --cdf-padding-v: 0px;

        border: 0;

        &::before {
            margin: 0;
            border: var(--cdf-border-width) solid var(--cdf-border-color);
            border-top-left-radius: var(--cdf-border-radius);
            border-top-right-radius: var(--cdf-border-radius);
        }

        > *:only-child {
            display: block;
            max-width: 100%;
            width: 100%;
            margin: 0;
        }
    }

    // <iframe>
    // ---------------------------------------------------------------------------
    > iframe:only-child {
        display: block;
        max-height: none;
        max-width: none;
        width: 100%;
        border: 0;
        margin: 0;
    }

    // Scrolling
    // ---------------------------------------------------------------------------
    &.scrolling {
        display: grid;
        align-items: stretch;
        padding: 0 !important;

        &::before {
            width: auto;
            margin: 0;
        }

        > :only-child {
            overflow: auto;
            padding: var(--cdf-padding-v) var(--cdf-padding-h);
        }
    }
}
